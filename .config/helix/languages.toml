[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.ruff]
command = "ruff-lsp"
args = []

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.json]
command = "vscode-json-language-server"
args = ["--stdio"]

[language-server.eslint.config]
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
format = { enable = false }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }

[language-server.phpactor]
command = "phpactor"
args = [ "language-server" ]

[[language]]
name = "php"
language-servers = [ "phpactor" ]
roots = ['pnpm-lock.yaml']
auto-format = true

[language-server.eslint.config.codeAction]
disableRuleComment = { enable = true }
showDocumentation = { enable = false }

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "eslint"]
language-id = "typescript"
formatter = { command = "prettierd", args = ["--stdin-filepath", "file.ts"]}
auto-format = true

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "eslint", "tailwindcss-ls"]
formatter = { command = "prettierd", args = ["--stdin-filepath", "file.tsx"]}
auto-format = true

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = "prettierd", args = ["--stdin-filepath", "file.js"]}
auto-format = true

[[language]]
name = "json"
language-servers = ["json"]
formatter = { command = "prettierd", args = ["--stdin-filepath", "file.json"]}
auto-format = true

[[language]]
name = "markdown"
language-servers = ["marksman"]
formatter = { command = "prettierd", args = ["--stdin-filepath", "file.json"]}
auto-format = true

[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py"]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "Poetry.lock", "requirements.txt", ".git"]
language-servers = ["pyright", "ruff"]
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true
debugger = { name = "debugpy", transport = "pipe", command = "python", args = ["-m", "debugpy.adapter"] }

[[language]]
name = "graphql"
language-servers = ["graphql-language-service"]
formatter = { command = "prettierd", args = ["--stdin-filepath", "file.graphql"]}
auto-format = true
