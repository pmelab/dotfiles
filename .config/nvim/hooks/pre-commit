#!/bin/bash

# Pre-commit hook for Neovim configuration
# This script runs tests before allowing commits

set -e

echo "üîß Running pre-commit checks for Neovim configuration..."

# Check if we're in a Neovim configuration directory
if [ ! -f "init.lua" ]; then
    echo "‚ö†Ô∏è  This doesn't appear to be a Neovim configuration directory"
    echo "   Pre-commit hook is designed for .config/nvim directory"
    exit 0
fi

# Check if nvim is available
if ! command -v nvim &> /dev/null; then
    echo "‚ùå Neovim is not installed or not in PATH"
    echo "   Skipping Neovim configuration tests"
    exit 0
fi

# Check if test files exist
if [ ! -d "tests" ]; then
    echo "‚ÑπÔ∏è  No tests directory found, skipping tests"
    exit 0
fi

echo "üß™ Running Neovim configuration tests..."

# Run tests with timeout to prevent hanging
timeout 30s ./run_tests.sh || {
    exit_code=$?
    if [ $exit_code -eq 124 ]; then
        echo "‚ùå Tests timed out after 30 seconds"
    else
        echo "‚ùå Tests failed with exit code $exit_code"
    fi
    echo "   Commit aborted. Please fix tests before committing."
    exit 1
}

echo "‚úÖ All tests passed!"

# Optional: Check for common issues in init.lua
echo "üîç Checking for common configuration issues..."

# Check for syntax errors in Lua files
if command -v luac &> /dev/null; then
    find . -name "*.lua" -not -path "./tests/*" -exec luac -p {} \; 2>&1 | grep -v "^$" && {
        echo "‚ùå Lua syntax errors found. Please fix them before committing."
        exit 1
    } || true
    echo "‚úÖ No Lua syntax errors found"
else
    echo "‚ÑπÔ∏è  luac not available, skipping Lua syntax check"
fi

# Check for potential issues in configuration
if grep -r "TODO\|FIXME\|XXX" --include="*.lua" . --exclude-dir=tests; then
    echo "‚ö†Ô∏è  Found TODO/FIXME comments in configuration"
    echo "   Consider addressing these before committing"
    # Don't fail on TODOs, just warn
fi

echo "üéâ Pre-commit checks completed successfully!"